@using System.Net;
@using CivilCalc.BAL
@using Microsoft.AspNetCore.Html;
@model CivilCalc.Areas.CAL_Calculator.Models.CAL_CalculatorModel;

<!-- begin : first table -->
<div class="row gy-5 g-xl-8">
    <div class="col-md-12">
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="row">
                    <!--begin: total value -->
                    <div class="col-md-4 text-center">
                        <h5 class="card-title fw-bolder">Total Volume of Top Soil</h5>
                        <br/>
                        <span class="text-danger fw-bolder" style="font-size: 24px">@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblAnswerTopSoilCubicMeterAndCMValue))</span><br/><b>&&</b><br/>
                        <span class="text-danger fw-bolder" style="font-size: 24px">@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblAnswerTopSoilCubicFeetAndInchValue))</span>
                    </div>
                    <!--end: total value -->
                    <!--begin: total value -->
                    <div class="col-md-8 text-center">
                        <h5 class="card-title fw-bolder">
                            Top soil calculation
                        </h5>
                        <hr class="text-center"/>
                        <div class="text-center ">
                            <div class="row">
                                <div class="col-sm-12">
                                   
                                    @Html.Raw(WebUtility.HtmlDecode(ViewBag.lblTopSoilFormula))
                                </div>
                            </div>
                            <br />
                            <br />
                        </div>
                    </div>
                    <!--end: total value -->
                </div>
            </div>
        </div>
    </div>
</div>
<!--end : first table-->
@foreach (var pagecontect in ViewBag.Page)
{

    @Html.Raw(WebUtility.HtmlDecode(pagecontect.PageContent))

}

    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script>
        // get the canvas element and its context
        var ctx = document.getElementById('myChart').getContext('2d');

        // create the chart with data and options
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['No. of Bricks', 'Cement in kg.', 'Sand in kg.'],
                datasets: [{
                    label: 'Asp dataset',
                    data: [@ViewBag.ChartBrick, @ViewBag.ChartCement, @ViewBag.ChartSand],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.9)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                        scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
