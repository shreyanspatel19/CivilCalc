@using System.Net;
@using CivilCalc.BAL
@using Microsoft.AspNetCore.Html;
@model CivilCalc.Areas.CAL_Calculator.Models.CAL_CalculatorModel;

<!-- begin : first table -->
    <div class="row gy-5 g-xl-8">
      <div class="col-md-12">
        <div class="card shadow-sm">
          <div class="card-body">
            <div class="row">
              <!--begin: total value -->
              <div class="col-md-3 text-center">
                        <h5 class="card-title fw-bolder">Total Area of Flooring</h5>
                        <span class="text-danger fw-bolder" style="font-size: 20px">@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblAnswerFlooringSquareMeterAndCMValue))</span><br />
                 <span class="text-danger fw-bolder m-1 font-md" style="font-size: 12px">or</span><br />
                        <span class="text-danger fw-bolder mx-1 font-md" style="font-size: 20px">@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblAnswerFlooringSquareFeetAndInchValue))</span>
              </div>
              <!--end: total value -->
               <!--begin: table -->
              <div class="col-md-5">
                <div class="table-responsive">
                 <table class="table table-row-bordered">
                    <thead>
                      <tr class="fw-bolder fs-6 text-gray-800">
                        <th>Sr.</th>
                        <th>Material</th>
                        <th>Unit</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>1</td>
                         <td><img src="@CV.imgtiles" style="width:25px;border-width:0px;">Tiles</td>
                                        <td>@ViewBag.lblAnswerTilesValue</td>
                      </tr>
                      <tr>
                        <td>2</td>
                         <td><img src="@CV.imgCement" style="width:25px;border-width:0px;">Cement</td>
                                        <td>@ViewBag.lblAnswerFlooringCementValue</td>
                      </tr>
                      <tr>
                        <td>3</td>
                         <td><img src="@CV.imgSand" style="width:25px;border-width:0px;">Sand</td>
                                        <td>@ViewBag.lblAnswerFlooringSandValue</td>
                      </tr>
                    </tbody>
                 </table>
                </div>
              </div>
               <!--end: table -->
              <div class="col-md-4">
            <!--begin::Card body-->
            <div
              class="card-body pt-2 pb-4 d-flex flex-wrap align-items-center">
              <!--begin::Chart-->
              <style>
                  .chart-container {
                      position: relative;
                      margin: auto;
                      height: 20vh;
                      width: 20vw;
                  }
              </style>
              <div class="chart-container">
                <canvas id="myChart"></canvas>
              </div>
              <!--end::Chart-->
            </div>
            <!--end::Card body-->
          </div>
            </div>
          </div>
        </div>
      </div>
    </div>
 <!--end : first table-->

<!-- begin : calculation steps  -->
        <div class="row gy-5 g-xl-8 mt-1">
    <div class="col-lg-12">
        <div class="card shadow-sm table-responsive">
            <div class="card-header">
                <h3 class="card-title">
                    <img class="img-fluid"
                         style="width: 16px"
                         src="@Url.Content(Model.CalculatorIcon)" />
                    &nbsp;@Model.CalculatorName
                </h3>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-6">
                        <blockquote >
                            <label>@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblFlooringFormula))</label>

                        </blockquote>
                        
                    </div>
                    <div class="col-md-6">
                        <blockquote>
                            <label>@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblNoofTiles))</label>
                        </blockquote>
                    </div>
                </div>
                <hr/>
                <div class="row text-center">
                    <div class="col-md-6">
                        <blockquote >
                            <label>@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblFlooringCementFormula))</label>

                        </blockquote>
                        
                    </div>
                    <div class="col-md-6">
                        <blockquote>
                            <label>@Html.Raw(WebUtility.HtmlDecode(ViewBag.lblFlooringSandFormula))</label>
                        </blockquote>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end : calculation steps -->

@foreach (var pagecontect in ViewBag.Page)
{

    @Html.Raw(WebUtility.HtmlDecode(pagecontect.PageContent))

}


    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script>
        // get the canvas element and its context
        var ctx = document.getElementById('myChart').getContext('2d');

        // create the chart with data and options
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Cement in kg.', 'Sand in kg.'],
                datasets: [{
                    label: 'Asp dataset',
                data: [@ViewBag.Cementchart, @ViewBag.Sandchart],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(54, 162, 235, 0.8)'
                     
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)'
                      
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                        scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
